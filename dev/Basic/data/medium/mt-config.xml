<?xml version="1.0" encoding="UTF-8"?>
<!-- Copyright Singapore-MIT Alliance for Research and Technology -->

<config>
        <!-- Determines whether to run SimMobility_Medium's demand simulator or the supply simulator -->
        <!-- Admissible values are "preday", "withinday" and "supply". Values "withinday" and "supply" runs the same code. Two different values are allowed just for convenience.--> 
        <mid_term_run_mode value="withinday"/>
        
        <!-- config specific to supply simulator -->                    
        <supply>
        
                <!-- period of supply output -->
                <update_interval value="1" units="minute" />
                
                <!-- these parameters are used to calculate dwell time of buses at bus stops-->
                <!-- these parameters will be organized in a better way after finding the meaning of these numbers -->
                <dwell_time_parameters>
                <!--parameters : minimum and maximum of fixed dwelling time, minimum and maximum of individual dwelling time-->
                <parameters value="2.0, 10.0, 2.0, 3.0"/>
                </dwell_time_parameters>

                <!-- pedestrian walking speed in cm/s (approximately 5 km/h)-->
                <pedestrian_walk_speed value="135"/>
                
                <!-- default capacity value -->
                <bus_default_capacity value="80"/>
                        
                <!-- these parameters are used to assign filename for the storage of statistics -->   
                <!-- if the value is empty, no output file is generated, otherwise store to csv file -->     
                <statistics_output_paramemters>                              
                        <journey_time_csv_file_output value="journeytime.csv"/>
                        <waiting_time_csv_file_output value="waitingtime.csv"/>
                        <waiting_amount_csv_file_output value="waitingamount.csv"/>
                </statistics_output_paramemters>  
        </supply>                                      
                
        <!-- config specific to preday simulator -->
        <preday>
                <!-- Control variable to run simulation, calibration or logsum computation. Admissible values are "simulation", "calibration", "logsum" and "lt_logsum" -->
                <run_mode value="simulation"/>
                <!-- Number of threads to create for processing the population in-->
                <!-- the preday demand simulator -->
                <threads value="6"/>
                <!-- outputs the preday predictions as activity schedule in CSV format if enabled with simulation run_mode -->
                <output_activity_schedule enabled="true"/>
                <!-- outputs the preday's predicted tours and stops to mongodb if enabled -->
                <output_predictions enabled="false"/>
                <!-- prints person ids and tour details in console for each person if enabled -->
                <console_output enabled="true"/>
                
                <model_scripts path="scripts/lua/mid/behavior-models/" format="lua">
                        <script name="logit" file="logit.lua"/> <!--The main logit code for multinomial and nested logit models-->
                        <script name="dpb" file="dpb.lua"/> <!-- Day Pattern Binary -->
                        <script name="dpt" file="dpt.lua"/> <!-- Day Pattern Tours -->
                        <script name="dps" file="dps.lua"/> <!-- Day Pattern Stops -->
                        <script name="ntw" file="ntw.lua"/> <!-- Number Of Tours Work -->
                        <script name="nte" file="nte.lua"/> <!-- Number Of Tours Education -->
                        <script name="nts" file="nts.lua"/> <!--Number Of Tours Shopping -->
                        <script name="nto" file="nto.lua"/> <!--Number Of Tours Others -->
                        <script name="uw" file="tuw.lua"/> <!--Attend Usual Work -->
                        <script name="tmw" file="tmw.lua"/> <!--Tour Mode Work -->
                        <script name="tme" file="tme.lua"/> <!--Tour Mode Education -->
                        <script name="tmdw" file="tmdw.lua"/> <!--Tour Mode/Destination Work -->
                        <script name="tmds" file="tmds.lua"/> <!--Tour Mode/Destination Shopping -->
                        <script name="tmdo" file="tmdo.lua"/> <!--Tour Mode/Destination Others -->
                        <script name="ttdw" file="ttdw.lua"/> <!--Tour Time Of Day Work -->
                        <script name="ttdo" file="ttdo.lua"/> <!--Tour Time Of Day Others -->
                        <script name="ttde" file="ttde.lua"/> <!--Tour Time Of Day Education -->
                        <script name="tws" file="tws.lua"/> <!--Work Based Sub-Tours -->
                        <script name="stmd" file="stmd.lua"/> <!--Work Based Sub-Tours Mode/Destination-->
                        <script name="sttd" file="sttd.lua"/> <!--Work Based Sub-Tours Time Of Day-->
                        <script name="isg" file="isg.lua"/> <!--Intermediate Stop Generation -->
                        <script name="imd" file="imd.lua"/> <!--Intermediate Stop Mode/Destination -->
                        <script name="itd" file="itd.lua"/> <!--Intermediate Stop Time Of Day -->
                </model_scripts>
                
                <!-- Names of MongoDB database and collections -->
                <mongo_collections db_name="preday">
                        <mongo_collection name="population" collection="hits12_population"/>
                        <mongo_collection name="tcost_bus" collection="tcost_bus"/>
                        <mongo_collection name="tcost_car" collection="tcost_car"/>
                        <mongo_collection name="AMCosts" collection="AMCosts"/>
                        <mongo_collection name="OPCosts" collection="OPCosts"/>
                        <mongo_collection name="PMCosts" collection="PMCosts"/>
                        <mongo_collection name="Zone" collection="Zone"/>
                        <mongo_collection name="zone_node" collection="node_mtz3"/>
                        <mongo_collection name="Output_DayPattern" collection="daypattern_1601_1"/>
                        <mongo_collection name="Output_Tour" collection="tour_1601_1"/>
                        <mongo_collection name="Output_Activity" collection="activity_1601_1"/>
                        <mongo_collection name="Output_SubTour" collection="wbst_1601_1"/>
                </mongo_collections>
                
                <calibration enabled="false">
                        <!-- variables to calibrate -->
                        <!-- expected csv format: variable_name,lua_file_name,initial_value,lower_limit,upper_limit -->
                        <variables file="data/medium/preday_calibration_variables.csv"/>
                        <!--csv providing the observed values for the statistics to compute-->
                        <observed_statistics file="data/medium/preday_observed_HITS08_statistics.csv"/>
                        <!-- which calibration technique to use: SPSA/WSPSA -->
                        <calibration_technique value="SPSA"/>
                        <!-- logsums will be recomputed every x iterations if value is set to x -->
                        <logsum_computation_frequency value="5"/>
                        <SPSA>
                                <!-- max number of iterations that spsa must run for -->
                                <iterations value="20"/>
                                <!-- termination condition for spsa is (F(X_k+1) - F(X_k) <= tolerance ) where F(X) is the objective function -->
                                <tolerence value="0.000001"/>
                                <!-- perturbation step size for iteration k is given by c_k = c / ((1+k)^gamma) -->
                                <gradient_step_size initial_value="0.1" algorithm_coefficient2="0.101"/>
                                <!-- step size for iteration k is given by a_k = a / ((1+k)^alpha) -->
                                <step_size initial_value="0.16" stability_constant="100" algorithm_coefficient1="0.602"/>
                        </SPSA>
                        <WSPSA>
                                <!-- max number of iterations that spsa must run for -->
                                <iterations value="20"/>
                                <!-- termination condition for spsa is (F(X_k+1) - F(X_k) <= tolerance ) where F(X) is the objective function -->
                                <tolerence value="0.000001"/>
                                <!-- perturbation step size for iteration k is given by c_k = c / ((1+k)^gamma) -->
                                <gradient_step_size initial_value="0.1" algorithm_coefficient2="0.101"/>
                                <!-- step size for iteration k is given by a_k = a / ((1+k)^alpha) -->
                                <step_size initial_value="0.16" stability_constant="100" algorithm_coefficient1="0.602"/>
                                <!-- csv containing the weight matrix-->
                                <weight_matrix file="data/medium/preday_calibration_weight_matrix.csv"/>
                        </WSPSA>
                        
                        <!-- output file to track the statistics and parameters for every iteration of calibration -->
                        <output file="preday_calibration_out.csv"/>
                </calibration>
        </preday>
</config>

