<?xml version="1.0" encoding="UTF-8"?>

<!-- Copyright Singapore-MIT Alliance for Research and Technology -->

<config>
    <!-- Anything in the "constructs" section is created with an ID and some structure (e.g., an object) -->
    <!-- The idea here is to allow re-using some common settings in multiple places, and to allow multiple optional -->
    <!-- items (e.g. database connections), without having to comment out the ones which are not used. -->
    <!-- Key to the idea of a construct is that if it is incorrectly specified, it is only considered to be an error if -->
    <!-- it is USED. In other words, the parser will flag it as an error, but pend that error until the construct is requested. -->
    <!-- A construct ID must be unique for its type (databases, credentials, etc.) -->
    <!-- Note that constructs can be defined and used out-of-order, since their IDs are only resolved once they are retrieved. -->
    <constructs>
        <!-- Groupings of stored procedures, used for loading network data from certain tables. -->
        <db_proc_groups>
            <!-- Entire singapore network with scaled activity_schedules from preday-->
            <proc_map id="withinday" format="aimsun">
                <mapping name="node" procedure="get_updated_node_sg()"/>
                <mapping name="section" procedure="get_updated_section_sg()"/>
                <mapping name="turning" procedure="get_updated_lane_connector_sg()"/>
                <mapping name="busstop" procedure="get_bus_stop_location_interchange()"/>
                <mapping name="polyline" procedure="get_updated_section_polyline()"/>
                <mapping name="pt_bus_dispatch_freq" procedure="get_pt_bus_dispatch_freq('weekday')"/>
                <mapping name="pt_bus_routes" procedure="get_pt_bus_routes()"/>           
                <mapping name="pt_bus_stops" procedure="get_pt_bus_stops()"/>             
                <mapping name="od_trips" procedure="get_od_trips()"/>  
                <mapping name="day_activity_schedule" procedure="get_persons_between_all"/>
                <mapping name="pt_edges" procedure="get_pt_map_edges_latest()"/>
                <mapping name="pt_vertices" procedure="get_pt_map_vertex_latest()"/>
                <mapping name="mrt_road_segments" procedure="get_mrt_road_segments()"/>
                <mapping name="pt_pathset" procedure="get_pt_pathset_corrected"/>
                <mapping name="restricted_reg_segments" procedure="get_section_banned_area()"/>
                <mapping name="restricted_reg_in_turning" procedure="get_banned_area_in_turning()"/>
                <mapping name="restricted_reg_out_turning" procedure="get_banned_area_out_turning()"/>
                <mapping name="restricted_reg_nodes" procedure="get_restricted_region_nodes()"/>
                <mapping name="screen_line" procedure="get_screen_line_segments()"/>
            </proc_map>
        </db_proc_groups>
    </constructs>

    <!-- System configuration properties -->
    <system>               
        <!-- Setting to "database" will load the road network from the database. By default we load from "xml". -->
        <!-- NOTE: This is fairly confusing; later we'll make it easier for different users to -->
        <!--       maintain their own configurations. -->
        <network_source value="database"/>
        
        <!-- If loading from XML, which input file? Default (or blank string) will force private/SimMobilityInput.xml -->
        <!-- If Writing XML, which output file? Default (or blank string) don't write at all -->
        <!-- This only has an effect if network_source is set to "xml" -->
        <network_xml_file_input value=""/>
        <network_xml_file_output value=""/>
    
        <!-- If loading from the database, which database, proc_map, and credentials are used? -->
        <!-- <network_database database="fm_local" credentials="vahid_cred" proc_map="bugis_small"/> -->
        <network_database database="fm_remote" credentials="fm_remote" proc_map="withinday"/>
        <!-- <network_database database="fm_local" credentials="harish_cred" proc_map="bugis_large"/> -->
        <!--<network_database database="fm_remote" credentials="fm_remote" proc_map="bugis_large"/>-->
        
        <!-- The new parser will simply load everything in the "generic_props" section into "SystemParams.genericProps".  -->
        <!-- In other words, you DO NOT need to update the parser just to add a simple string-based configuration parameter to -->
        <!-- the config file. This is intended to be used for new or temporary features. -->
        <generic_props>
            <!-- The current control strategy for buses. Can be "headway_based", "evenheadway_based", "hybrid_based", or (default) "no_control" -->
            <property key="busline_control_type" value="headway_based"/>
        </generic_props>
    </system>
      
    <incidentsData enabled="false">
        <incident id="0" visibility="4000" segment="40200" position="60" cap_factor="1.0" start_time="08:30:00" duration="00:32:00" length="1000" compliance="50" accessibility="50" > 
            <lane laneId="0" speedLimitFactor="0"/>
            <lane laneId="1" speedLimitFactor="0"/>
            <lane laneId="2" speedLimitFactor="20"/>
        </incident>
    </incidentsData>
    
    <!-- This is data only for "schedule_based", "evenheadway_based" or "hybrid_based" control strategies -->
    <!-- each item store the scheduled offset arriving time(ms) and offset departure time(ms) at some bus stops -->
    <scheduledTimes>
        <stop offsetAT="11600" offsetDT="17600" />
        <stop offsetAT="74800" offsetDT="80800" />
        <stop offsetAT="101000" offsetDT="107100" />
        <stop offsetAT="124000" offsetDT="130000" />       
        <stop offsetAT="174300" offsetDT="180300" />    
        <stop offsetAT="254400" offsetDT="260400" />
        <stop offsetAT="287800" offsetDT="293800" />
        <stop offsetAT="313500" offsetDT="319500" />       
        <stop offsetAT="376100" offsetDT="382100" />    
        <stop offsetAT="403600" offsetDT="409600" />        
    </scheduledTimes>
    
<!--<signals> -->
    <!-- Any of the following signals will not be created if it has already been created by -->
    <!-- the 'signal' stored procedure above.  Note that this <signals> section will be -->
    <!-- removed soon and without notice.  After that, only signals found in the database -->
    <!-- will be created. -->
<!--<signal xpos="37250760" ypos="14355120"/>
    </signals> -->
    <CBD enabled="false"/>
    <generateBusRoutes enabled="false" /> 
    <travel_time_update interval="300" alpha="0.5" />
    <public_transit enabled="true"/>
    <screen-line_count interval="900" file-name="screenLineCount.txt" screenLineCountEnabled="true" />
</config>

